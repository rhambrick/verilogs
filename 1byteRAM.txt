/* 
    Behavior: Addr_0 and Addr_1 correspond to the row the data sits on, those two inputs go into a binary decoder which is ANDed with data, write enable, and Q of each cell within the memory matrix.
    Data and Write_enable go to every cell on each row, but only go through based on AND gate with Addr.
    Each cell is a D-latch. This would be a capacitor in SRAM, but here it's DRAM.
    All Q values for each digit are OR'd together and run to the output wires to display what the data at the current addressed cell is. Typically this would be consolidated to the data bus with a read_enable, but I am limited on components.
*/

/*
  AutoGenerated Element Usage Report
    Input - 5 times
    AndGate - 44 times
    NorGate - 16 times
    OrGate - 2 times
    Output - 2 times
    NotGate - 10 times
*/

// Sample Testbench Code - skeleton

/*
module TestBench();

  reg addr_0, addr_1, write_enable, data_0, data_1;

  wire out_0, out_1;

  Main DUT0(out_0, out_1, addr_0, addr_1, write_enable, data_0, data_1);

  initial begin
    addr_0 = 0;
    addr_1 = 0;
    write_enable = 0;
    data_0 = 0;
    data_1 = 0;

    #15
    $display("out_0 = %b", out_0);
    $display("out_1 = %b", out_1);

    #10
    $display("out_0 = %b", out_0);
    $display("out_1 = %b", out_1);

    $finish;

  end
endmodule

*/

module Main(out_0, out_1, addr_0, addr_1, write_enable, data_0, data_1);
  output out_0,  out_1;
  input addr_0, addr_1, write_enable, data_0, data_1;
  wire and_37_out, and_36_out, nor_14_out, nor_15_out, and_39_out, or_1_out, not_7_out, and_35_out, and_27_out, and_26_out, nor_10_out, nor_11_out, and_29_out, not_5_out, and_25_out, and_17_out, and_16_out, nor_6_out, nor_7_out, and_19_out, not_3_out, and_15_out, and_7_out, and_6_out, nor_2_out, nor_3_out, and_9_out, not_1_out, and_5_out, and_32_out, and_31_out, nor_12_out, nor_13_out, and_34_out, or_0_out, not_6_out, and_30_out, and_22_out, and_21_out, nor_8_out, nor_9_out, and_24_out, not_4_out, and_20_out, and_12_out, and_11_out, nor_4_out, nor_5_out, and_14_out, not_2_out, and_10_out, and_2_out, and_1_out, nor_0_out, nor_1_out, and_4_out, not_0_out, and_0_out, and_8_out, and_18_out, and_38_out, and_33_out, and_28_out, and_23_out, and_13_out, and_3_out, and_43_out, and_41_out, not_8_out, and_42_out, and_40_out, not_9_out;
  assign and_37_out = data_1 & and_43_out;
  assign and_36_out = and_37_out & and_38_out;
  assign nor_14_out = ~(and_36_out | nor_15_out);
  assign nor_15_out = ~(nor_14_out | and_35_out);
  assign and_39_out = nor_15_out & and_43_out;
  assign or_1_out = and_9_out | and_19_out | and_29_out | and_39_out;
  assign out_1 = or_1_out;
  assign not_7_out = ~and_37_out;
  assign and_35_out = and_38_out & not_7_out;
  assign and_27_out = data_1 & and_42_out;
  assign and_26_out = and_27_out & and_28_out;
  assign nor_10_out = ~(and_26_out | nor_11_out);
  assign nor_11_out = ~(nor_10_out | and_25_out);
  assign and_29_out = nor_11_out & and_42_out;
  assign not_5_out = ~and_27_out;
  assign and_25_out = and_28_out & not_5_out;
  assign and_17_out = data_1 & and_41_out;
  assign and_16_out = and_17_out & and_18_out;
  assign nor_6_out = ~(and_16_out | nor_7_out);
  assign nor_7_out = ~(nor_6_out | and_15_out);
  assign and_19_out = nor_7_out & and_41_out;
  assign not_3_out = ~and_17_out;
  assign and_15_out = and_18_out & not_3_out;
  assign and_7_out = data_1 & and_40_out;
  assign and_6_out = and_7_out & and_8_out;
  assign nor_2_out = ~(and_6_out | nor_3_out);
  assign nor_3_out = ~(nor_2_out | and_5_out);
  assign and_9_out = nor_3_out & and_40_out;
  assign not_1_out = ~and_7_out;
  assign and_5_out = and_8_out & not_1_out;
  assign and_32_out = data_0 & and_43_out;
  assign and_31_out = and_32_out & and_33_out;
  assign nor_12_out = ~(and_31_out | nor_13_out);
  assign nor_13_out = ~(nor_12_out | and_30_out);
  assign and_34_out = nor_13_out & and_43_out;
  assign or_0_out = and_4_out | and_14_out | and_24_out | and_34_out;
  assign out_0 = or_0_out;
  assign not_6_out = ~and_32_out;
  assign and_30_out = and_33_out & not_6_out;
  assign and_22_out = data_0 & and_42_out;
  assign and_21_out = and_22_out & and_23_out;
  assign nor_8_out = ~(and_21_out | nor_9_out);
  assign nor_9_out = ~(nor_8_out | and_20_out);
  assign and_24_out = nor_9_out & and_42_out;
  assign not_4_out = ~and_22_out;
  assign and_20_out = and_23_out & not_4_out;
  assign and_12_out = data_0 & and_41_out;
  assign and_11_out = and_12_out & and_13_out;
  assign nor_4_out = ~(and_11_out | nor_5_out);
  assign nor_5_out = ~(nor_4_out | and_10_out);
  assign and_14_out = nor_5_out & and_41_out;
  assign not_2_out = ~and_12_out;
  assign and_10_out = and_13_out & not_2_out;
  assign and_2_out = data_0 & and_40_out;
  assign and_1_out = and_2_out & and_3_out;
  assign nor_0_out = ~(and_1_out | nor_1_out);
  assign nor_1_out = ~(nor_0_out | and_0_out);
  assign and_4_out = nor_1_out & and_40_out;
  assign not_0_out = ~and_2_out;
  assign and_0_out = and_3_out & not_0_out;
  assign and_8_out = write_enable & and_40_out;
  assign and_18_out = write_enable & and_41_out;
  assign and_38_out = write_enable & and_43_out;
  assign and_33_out = write_enable & and_43_out;
  assign and_28_out = write_enable & and_42_out;
  assign and_23_out = write_enable & and_42_out;
  assign and_13_out = write_enable & and_41_out;
  assign and_3_out = write_enable & and_40_out;
  assign and_43_out = addr_1 & addr_0;
  assign and_41_out = addr_1 & not_9_out;
  assign not_8_out = ~addr_1;
  assign and_42_out = addr_0 & not_8_out;
  assign and_40_out = not_8_out & not_9_out;
  assign not_9_out = ~addr_0;
endmodule
